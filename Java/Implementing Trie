class TrieNode{
     TrieNode [] arr;
    boolean isEnd;
    
    public TrieNode(){
        arr=new TrieNode[26];
    }
}

class Trie {
private TrieNode root;
    /** Initialize your data structure here. */
    public Trie() {
        root=new TrieNode();
    }
    
    /** Inserts a word into the trie. */
    public void insert(String word) {
        TrieNode temp=root;
        for(char ch : word.toCharArray()){
            if(temp.arr[ch-'a']==null)
                temp.arr[ch-'a']=new TrieNode();
            temp=temp.arr[ch-'a'];
        }
        temp.isEnd=true;
    }
    
    /** Returns if the word is in the trie. */
    public boolean search(String word) {
         TrieNode temp=root;
        for(char  ch: word.toCharArray()){
            if(temp.arr[ch-'a']==null)
                return false;
            temp=temp.arr[ch-'a'];
        }
        return temp.isEnd;
    }
    
    /** Returns if there is any word in the trie that starts with the given prefix. */
    public boolean startsWith(String prefix) {
        TrieNode temp=root;
        for(char ch: prefix.toCharArray()){
            if(temp.arr[ch-'a']==null)
                return false;
            temp=temp.arr[ch-'a'];
        }
        return true;   
    }
}

/**
 * Your Trie object will be instantiated and called as such:
 * Trie obj = new Trie();
 * obj.insert(word);
 * boolean param_2 = obj.search(word);
 * boolean param_3 = obj.startsWith(prefix);
 */
